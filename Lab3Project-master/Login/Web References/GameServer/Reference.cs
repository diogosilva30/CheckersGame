//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace LabProject.GameServer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IGameRelayService", Namespace="https://gamerelay.proj.writecode.link/")]
    public partial class IGameRelayService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetupServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback JoinServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGameStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGameDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPlayerReadyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanPlayerPlayOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGameCommandsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGameEndOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IGameRelayService() {
            this.Url = global::LabProject.Properties.Settings.Default.Login_GameServer_IGameRelayService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event SetupServerCompletedEventHandler SetupServerCompleted;
        
        /// <remarks/>
        public event GetServerListCompletedEventHandler GetServerListCompleted;
        
        /// <remarks/>
        public event JoinServerCompletedEventHandler JoinServerCompleted;
        
        /// <remarks/>
        public event GetGameStatusCompletedEventHandler GetGameStatusCompleted;
        
        /// <remarks/>
        public event GetGameDataCompletedEventHandler GetGameDataCompleted;
        
        /// <remarks/>
        public event SetPlayerReadyCompletedEventHandler SetPlayerReadyCompleted;
        
        /// <remarks/>
        public event CanPlayerPlayCompletedEventHandler CanPlayerPlayCompleted;
        
        /// <remarks/>
        public event SendCommandCompletedEventHandler SendCommandCompleted;
        
        /// <remarks/>
        public event ConfirmCommandCompletedEventHandler ConfirmCommandCompleted;
        
        /// <remarks/>
        public event GetLastCommandCompletedEventHandler GetLastCommandCompleted;
        
        /// <remarks/>
        public event GetAllGameCommandsCompletedEventHandler GetAllGameCommandsCompleted;
        
        /// <remarks/>
        public event SetGameEndCompletedEventHandler SetGameEndCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/Ping", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Ping(string s) {
            object[] results = this.Invoke("Ping", new object[] {
                        s});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync(string s) {
            this.PingAsync(s, null);
        }
        
        /// <remarks/>
        public void PingAsync(string s, object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[] {
                        s}, this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/SetupServer", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServerInfo SetupServer() {
            object[] results = this.Invoke("SetupServer", new object[0]);
            return ((ServerInfo)(results[0]));
        }
        
        /// <remarks/>
        public void SetupServerAsync() {
            this.SetupServerAsync(null);
        }
        
        /// <remarks/>
        public void SetupServerAsync(object userState) {
            if ((this.SetupServerOperationCompleted == null)) {
                this.SetupServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetupServerOperationCompleted);
            }
            this.InvokeAsync("SetupServer", new object[0], this.SetupServerOperationCompleted, userState);
        }
        
        private void OnSetupServerOperationCompleted(object arg) {
            if ((this.SetupServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetupServerCompleted(this, new SetupServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/GetServerList", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ServerInfo[] GetServerList() {
            object[] results = this.Invoke("GetServerList", new object[0]);
            return ((ServerInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServerListAsync() {
            this.GetServerListAsync(null);
        }
        
        /// <remarks/>
        public void GetServerListAsync(object userState) {
            if ((this.GetServerListOperationCompleted == null)) {
                this.GetServerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerListOperationCompleted);
            }
            this.InvokeAsync("GetServerList", new object[0], this.GetServerListOperationCompleted, userState);
        }
        
        private void OnGetServerListOperationCompleted(object arg) {
            if ((this.GetServerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerListCompleted(this, new GetServerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/JoinServer", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool JoinServer(string GameId, PlayerInfo playerInfo) {
            object[] results = this.Invoke("JoinServer", new object[] {
                        GameId,
                        playerInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void JoinServerAsync(string GameId, PlayerInfo playerInfo) {
            this.JoinServerAsync(GameId, playerInfo, null);
        }
        
        /// <remarks/>
        public void JoinServerAsync(string GameId, PlayerInfo playerInfo, object userState) {
            if ((this.JoinServerOperationCompleted == null)) {
                this.JoinServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJoinServerOperationCompleted);
            }
            this.InvokeAsync("JoinServer", new object[] {
                        GameId,
                        playerInfo}, this.JoinServerOperationCompleted, userState);
        }
        
        private void OnJoinServerOperationCompleted(object arg) {
            if ((this.JoinServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JoinServerCompleted(this, new JoinServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/GetGameStatus", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GameStatus GetGameStatus(string GameId) {
            object[] results = this.Invoke("GetGameStatus", new object[] {
                        GameId});
            return ((GameStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetGameStatusAsync(string GameId) {
            this.GetGameStatusAsync(GameId, null);
        }
        
        /// <remarks/>
        public void GetGameStatusAsync(string GameId, object userState) {
            if ((this.GetGameStatusOperationCompleted == null)) {
                this.GetGameStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameStatusOperationCompleted);
            }
            this.InvokeAsync("GetGameStatus", new object[] {
                        GameId}, this.GetGameStatusOperationCompleted, userState);
        }
        
        private void OnGetGameStatusOperationCompleted(object arg) {
            if ((this.GetGameStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameStatusCompleted(this, new GetGameStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/GetGameData", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GameDetail GetGameData(string GameId) {
            object[] results = this.Invoke("GetGameData", new object[] {
                        GameId});
            return ((GameDetail)(results[0]));
        }
        
        /// <remarks/>
        public void GetGameDataAsync(string GameId) {
            this.GetGameDataAsync(GameId, null);
        }
        
        /// <remarks/>
        public void GetGameDataAsync(string GameId, object userState) {
            if ((this.GetGameDataOperationCompleted == null)) {
                this.GetGameDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameDataOperationCompleted);
            }
            this.InvokeAsync("GetGameData", new object[] {
                        GameId}, this.GetGameDataOperationCompleted, userState);
        }
        
        private void OnGetGameDataOperationCompleted(object arg) {
            if ((this.GetGameDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameDataCompleted(this, new GetGameDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/SetPlayerReady", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetPlayerReady(string GameId, string PlayerId) {
            object[] results = this.Invoke("SetPlayerReady", new object[] {
                        GameId,
                        PlayerId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPlayerReadyAsync(string GameId, string PlayerId) {
            this.SetPlayerReadyAsync(GameId, PlayerId, null);
        }
        
        /// <remarks/>
        public void SetPlayerReadyAsync(string GameId, string PlayerId, object userState) {
            if ((this.SetPlayerReadyOperationCompleted == null)) {
                this.SetPlayerReadyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPlayerReadyOperationCompleted);
            }
            this.InvokeAsync("SetPlayerReady", new object[] {
                        GameId,
                        PlayerId}, this.SetPlayerReadyOperationCompleted, userState);
        }
        
        private void OnSetPlayerReadyOperationCompleted(object arg) {
            if ((this.SetPlayerReadyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPlayerReadyCompleted(this, new SetPlayerReadyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/CanPlayerPlay", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanPlayerPlay(string GameId, string PlayerId) {
            object[] results = this.Invoke("CanPlayerPlay", new object[] {
                        GameId,
                        PlayerId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanPlayerPlayAsync(string GameId, string PlayerId) {
            this.CanPlayerPlayAsync(GameId, PlayerId, null);
        }
        
        /// <remarks/>
        public void CanPlayerPlayAsync(string GameId, string PlayerId, object userState) {
            if ((this.CanPlayerPlayOperationCompleted == null)) {
                this.CanPlayerPlayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanPlayerPlayOperationCompleted);
            }
            this.InvokeAsync("CanPlayerPlay", new object[] {
                        GameId,
                        PlayerId}, this.CanPlayerPlayOperationCompleted, userState);
        }
        
        private void OnCanPlayerPlayOperationCompleted(object arg) {
            if ((this.CanPlayerPlayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanPlayerPlayCompleted(this, new CanPlayerPlayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/SendCommand", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendCommand(GameCommand command) {
            object[] results = this.Invoke("SendCommand", new object[] {
                        command});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendCommandAsync(GameCommand command) {
            this.SendCommandAsync(command, null);
        }
        
        /// <remarks/>
        public void SendCommandAsync(GameCommand command, object userState) {
            if ((this.SendCommandOperationCompleted == null)) {
                this.SendCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCommandOperationCompleted);
            }
            this.InvokeAsync("SendCommand", new object[] {
                        command}, this.SendCommandOperationCompleted, userState);
        }
        
        private void OnSendCommandOperationCompleted(object arg) {
            if ((this.SendCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCommandCompleted(this, new SendCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/ConfirmCommand", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfirmCommand(string CommandId) {
            object[] results = this.Invoke("ConfirmCommand", new object[] {
                        CommandId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmCommandAsync(string CommandId) {
            this.ConfirmCommandAsync(CommandId, null);
        }
        
        /// <remarks/>
        public void ConfirmCommandAsync(string CommandId, object userState) {
            if ((this.ConfirmCommandOperationCompleted == null)) {
                this.ConfirmCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmCommandOperationCompleted);
            }
            this.InvokeAsync("ConfirmCommand", new object[] {
                        CommandId}, this.ConfirmCommandOperationCompleted, userState);
        }
        
        private void OnConfirmCommandOperationCompleted(object arg) {
            if ((this.ConfirmCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmCommandCompleted(this, new ConfirmCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/GetLastCommand", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GameCommand GetLastCommand(string GameId) {
            object[] results = this.Invoke("GetLastCommand", new object[] {
                        GameId});
            return ((GameCommand)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastCommandAsync(string GameId) {
            this.GetLastCommandAsync(GameId, null);
        }
        
        /// <remarks/>
        public void GetLastCommandAsync(string GameId, object userState) {
            if ((this.GetLastCommandOperationCompleted == null)) {
                this.GetLastCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastCommandOperationCompleted);
            }
            this.InvokeAsync("GetLastCommand", new object[] {
                        GameId}, this.GetLastCommandOperationCompleted, userState);
        }
        
        private void OnGetLastCommandOperationCompleted(object arg) {
            if ((this.GetLastCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastCommandCompleted(this, new GetLastCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/GetAllGameCommands", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public GameCommand[] GetAllGameCommands(string GameId) {
            object[] results = this.Invoke("GetAllGameCommands", new object[] {
                        GameId});
            return ((GameCommand[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGameCommandsAsync(string GameId) {
            this.GetAllGameCommandsAsync(GameId, null);
        }
        
        /// <remarks/>
        public void GetAllGameCommandsAsync(string GameId, object userState) {
            if ((this.GetAllGameCommandsOperationCompleted == null)) {
                this.GetAllGameCommandsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGameCommandsOperationCompleted);
            }
            this.InvokeAsync("GetAllGameCommands", new object[] {
                        GameId}, this.GetAllGameCommandsOperationCompleted, userState);
        }
        
        private void OnGetAllGameCommandsOperationCompleted(object arg) {
            if ((this.GetAllGameCommandsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGameCommandsCompleted(this, new GetAllGameCommandsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gamerelay.proj.writecode.link/IGameRelayService/SetGameEnd", RequestNamespace="https://gamerelay.proj.writecode.link/", ResponseNamespace="https://gamerelay.proj.writecode.link/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetGameEnd(string GameId) {
            object[] results = this.Invoke("SetGameEnd", new object[] {
                        GameId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetGameEndAsync(string GameId) {
            this.SetGameEndAsync(GameId, null);
        }
        
        /// <remarks/>
        public void SetGameEndAsync(string GameId, object userState) {
            if ((this.SetGameEndOperationCompleted == null)) {
                this.SetGameEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGameEndOperationCompleted);
            }
            this.InvokeAsync("SetGameEnd", new object[] {
                        GameId}, this.SetGameEndOperationCompleted, userState);
        }
        
        private void OnSetGameEndOperationCompleted(object arg) {
            if ((this.SetGameEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGameEndCompleted(this, new SetGameEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gamerelay.proj.writecode.link/")]
    public partial class ServerInfo {
        
        private string gameIdField;
        
        private string serverNameField;
        
        private System.DateTime serverStartedField;
        
        private int playersCountField;
        
        private int playersReadyField;
        
        private GameState serverStateField;
        
        /// <remarks/>
        public string GameId {
            get {
                return this.gameIdField;
            }
            set {
                this.gameIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServerName {
            get {
                return this.serverNameField;
            }
            set {
                this.serverNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServerStarted {
            get {
                return this.serverStartedField;
            }
            set {
                this.serverStartedField = value;
            }
        }
        
        /// <remarks/>
        public int PlayersCount {
            get {
                return this.playersCountField;
            }
            set {
                this.playersCountField = value;
            }
        }
        
        /// <remarks/>
        public int PlayersReady {
            get {
                return this.playersReadyField;
            }
            set {
                this.playersReadyField = value;
            }
        }
        
        /// <remarks/>
        public GameState ServerState {
            get {
                return this.serverStateField;
            }
            set {
                this.serverStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gamerelay.proj.writecode.link/")]
    public partial class GameState {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gamerelay.proj.writecode.link/")]
    public partial class GameCommand {
        
        private int commandIdField;
        
        private string gameIdField;
        
        private string playerIdField;
        
        private string commandDataField;
        
        private bool commandAcceptedField;
        
        /// <remarks/>
        public int CommandId {
            get {
                return this.commandIdField;
            }
            set {
                this.commandIdField = value;
            }
        }
        
        /// <remarks/>
        public string GameId {
            get {
                return this.gameIdField;
            }
            set {
                this.gameIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlayerId {
            get {
                return this.playerIdField;
            }
            set {
                this.playerIdField = value;
            }
        }
        
        /// <remarks/>
        public string CommandData {
            get {
                return this.commandDataField;
            }
            set {
                this.commandDataField = value;
            }
        }
        
        /// <remarks/>
        public bool CommandAccepted {
            get {
                return this.commandAcceptedField;
            }
            set {
                this.commandAcceptedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gamerelay.proj.writecode.link/")]
    public partial class GameDetail {
        
        private PlayerInfo[] playersField;
        
        private string gameIdField;
        
        private string serverNameField;
        
        private System.DateTime serverStartedField;
        
        private int playersCountField;
        
        private int playersReadyField;
        
        private GameState serverStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public PlayerInfo[] Players {
            get {
                return this.playersField;
            }
            set {
                this.playersField = value;
            }
        }
        
        /// <remarks/>
        public string GameId {
            get {
                return this.gameIdField;
            }
            set {
                this.gameIdField = value;
            }
        }
        
        /// <remarks/>
        public string ServerName {
            get {
                return this.serverNameField;
            }
            set {
                this.serverNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServerStarted {
            get {
                return this.serverStartedField;
            }
            set {
                this.serverStartedField = value;
            }
        }
        
        /// <remarks/>
        public int PlayersCount {
            get {
                return this.playersCountField;
            }
            set {
                this.playersCountField = value;
            }
        }
        
        /// <remarks/>
        public int PlayersReady {
            get {
                return this.playersReadyField;
            }
            set {
                this.playersReadyField = value;
            }
        }
        
        /// <remarks/>
        public GameState ServerState {
            get {
                return this.serverStateField;
            }
            set {
                this.serverStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gamerelay.proj.writecode.link/")]
    public partial class PlayerInfo {
        
        private string playerIdField;
        
        private string usernameField;
        
        private string nameField;
        
        private bool isReadyField;
        
        private byte[] photoBytesField;
        
        private bool isFirstField;
        
        private string countryField;
        
        private int gamesWonStatsField;
        
        private int gamesStartedStatsField;
        
        private int gamesLostStatsField;
        
        private int gamesAbandonedStatsField;
        
        /// <remarks/>
        public string PlayerId {
            get {
                return this.playerIdField;
            }
            set {
                this.playerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsReady {
            get {
                return this.isReadyField;
            }
            set {
                this.isReadyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PhotoBytes {
            get {
                return this.photoBytesField;
            }
            set {
                this.photoBytesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFirst {
            get {
                return this.isFirstField;
            }
            set {
                this.isFirstField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public int GamesWonStats {
            get {
                return this.gamesWonStatsField;
            }
            set {
                this.gamesWonStatsField = value;
            }
        }
        
        /// <remarks/>
        public int GamesStartedStats {
            get {
                return this.gamesStartedStatsField;
            }
            set {
                this.gamesStartedStatsField = value;
            }
        }
        
        /// <remarks/>
        public int GamesLostStats {
            get {
                return this.gamesLostStatsField;
            }
            set {
                this.gamesLostStatsField = value;
            }
        }
        
        /// <remarks/>
        public int GamesAbandonedStats {
            get {
                return this.gamesAbandonedStatsField;
            }
            set {
                this.gamesAbandonedStatsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gamerelay.proj.writecode.link/")]
    public partial class GameStatus {
        
        private string gameIdField;
        
        private GameState statusField;
        
        /// <remarks/>
        public string GameId {
            get {
                return this.gameIdField;
            }
            set {
                this.gameIdField = value;
            }
        }
        
        /// <remarks/>
        public GameState Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetupServerCompletedEventHandler(object sender, SetupServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetupServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetupServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServerInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServerInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetServerListCompletedEventHandler(object sender, GetServerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServerInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServerInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void JoinServerCompletedEventHandler(object sender, JoinServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JoinServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JoinServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetGameStatusCompletedEventHandler(object sender, GetGameStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGameStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGameStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetGameDataCompletedEventHandler(object sender, GetGameDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGameDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGameDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetPlayerReadyCompletedEventHandler(object sender, SetPlayerReadyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPlayerReadyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPlayerReadyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CanPlayerPlayCompletedEventHandler(object sender, CanPlayerPlayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanPlayerPlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanPlayerPlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SendCommandCompletedEventHandler(object sender, SendCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ConfirmCommandCompletedEventHandler(object sender, ConfirmCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetLastCommandCompletedEventHandler(object sender, GetLastCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameCommand Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameCommand)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllGameCommandsCompletedEventHandler(object sender, GetAllGameCommandsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGameCommandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGameCommandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameCommand[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameCommand[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetGameEndCompletedEventHandler(object sender, SetGameEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetGameEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetGameEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591